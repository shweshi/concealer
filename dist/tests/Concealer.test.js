'use strict';var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});const Concealer_1=__importDefault(require('../src/Concealer'));const chai_1=__importDefault(require('chai'));const sinon_1=__importDefault(require('sinon'));const expect=chai_1.default.expect;describe('Concealer Test',()=>{let concealer;beforeEach(()=>{concealer=new Concealer_1.default();});after(()=>{sinon_1.default.restore();});describe('Conceal emails test',()=>{it('should conceal emails with yopmail.com',()=>{const string='hi alex@gmail.com';const concealString=concealer.conceal(string);expect(concealString).to.equal('hi alex@example.org');});it('should conceal emails with yopmail.com with provided domain',()=>{const string='hi alex@gmail.com';const concealString=concealer.conceal(string,'concealed.com');expect(concealString).to.equal('hi alex@concealed.com');});it('should conceal emails by incrementing the local part if there are more than one same local part',()=>{const string='hi alex@gmail.com, alex@yahoo.in and alex@outlook.com';const concealString=concealer.conceal(string);expect(concealString).to.equal('hi alex@example.org, alex-1@example.org and alex-2@example.org');});});});